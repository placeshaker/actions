import { DeploymentFile } from './hashes';
import { Options } from '../deploy';
import { NowJsonOptions } from '../types';
export declare const API_FILES = "https://api.zeit.co/v2/now/files";
export declare const API_DEPLOYMENTS = "https://api.zeit.co/v9/now/deployments";
export declare const API_DEPLOYMENTS_LEGACY = "https://api.zeit.co/v3/now/deployments";
export declare const API_DELETE_DEPLOYMENTS_LEGACY = "https://api.zeit.co/v2/now/deployments";
export declare const EVENTS: Set<string>;
export declare function parseNowJSON(filePath?: string): Promise<NowJsonOptions>;
export declare function getNowIgnore(path: string | string[]): Promise<any>;
export declare const fetch: (url: string, token: string, opts?: any, debugEnabled?: boolean | undefined) => Promise<any>;
export interface PreparedFile {
    file: string;
    sha: string;
    size: number;
}
export declare const prepareFiles: (files: Map<string, DeploymentFile>, options: Options) => PreparedFile[];
export declare function createDebug(debug?: boolean): (...logs: string[]) => void;
